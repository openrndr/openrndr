plugins {
    alias(libs.plugins.nebula.release)
    alias(libs.plugins.gradle.nexus.publish)
    id("org.openrndr.convention.dokka")
    id 'com.adarshr.test-logger' version '3.2.0'
}

repositories {
    mavenCentral()
}

group = "org.openrndr"
nexusPublishing {
    repositories {
        sonatype {
            username.set(findProperty("ossrhUsername") ?: System.getenv("OSSRH_USERNAME"))
            password.set(findProperty("ossrhPassword") ?: System.getenv("OSSRH_PASSWORD"))
            nexusUrl.set(uri("https://ossrh-staging-api.central.sonatype.com/service/local/"))
            snapshotRepositoryUrl.set(uri("https://central.sonatype.com/repository/maven-snapshots/"))
        }
    }
}

subprojects {
    // Equivalent Kotlin is: tasks.register<DependencyReportTask>("dependenciesAll") { ...
    tasks.register("dependenciesAll", DependencyReportTask) {
        group = HelpTasksPlugin.HELP_GROUP
        description = "Displays all dependencies, including subprojects."
    }
}

dependencies {
    dokka(project(":openrndr-animatable:"))
    dokka(project(":openrndr-application:"))
    dokka(project(":openrndr-binpack:"))
    dokka(project(":openrndr-color:"))
    dokka(project(":openrndr-dds:"))
    dokka(project(":openrndr-jvm:openrndr-dialogs:"))
    dokka(project(":openrndr-draw:"))
    dokka(project(":openrndr-event:"))
    dokka(project(":openrndr-extensions:"))
    dokka(project(":openrndr-jvm:openrndr-ffmpeg:"))
    dokka(project(":openrndr-filter:"))
    dokka(project(":openrndr-gl-common:"))
    dokka(project(":openrndr-jvm:openrndr-gl3:"))
    dokka(project(":openrndr-kartifex:"))
    dokka(project(":openrndr-ktessellation:"))
    dokka(project(":openrndr-math:"))
    dokka(project(":openrndr-nullgl:"))
    dokka(project(":openrndr-jvm:openrndr-openal:"))
    dokka(project(":openrndr-platform:"))
    dokka(project(":openrndr-shape:"))
    dokka(project(":openrndr-utils:"))
    dokka(project(":openrndr-js:openrndr-webgl:"))
}

tasks.every {
    println(it)
}

class SleepTask extends DefaultTask {
    @TaskAction
    void action() {
        sleep(60 * 5 * 1000)
    }
}
tasks.register("sleep", SleepTask)
gradle.buildFinished {
    println("\n")
    println("openrndr = \"${version}\"")
}
